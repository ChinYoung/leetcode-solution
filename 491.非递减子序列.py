#
# @lc app=leetcode.cn id=491 lang=python3
#
# [491] 非递减子序列
#

# @lc code=start
from typing import List


class Solution:
    def findSubsequences(self, nums: List[int]) -> List[List[int]]:
        res = []
        for i in nums:
            new_arr = []
            for arr in res:
                a = arr + [i]
                if i >= arr[-1] and a not in res and a not in new_arr:
                    new_arr.append(a)
            res.extend(new_arr)
            res.append([i])
        return list((filter(lambda x: len(x) > 1, res)))

# @lc code=end

if __name__ =="__main__":
    s = Solution()
    nums = [1,1,1,2,2,2,3,3,3]
    res = s.findSubsequences(nums)
    ans = [[1,1],[1,1,1],[1,1,1,2],[1,1,1,2,2],[1,1,1,2,2,2],[1,1,1,2,2,2,3],[1,1,1,2,2,2,3,3],[1,1,1,2,2,2,3,3,3],[1,1,1,2,2,3],[1,1,1,2,2,3,3],[1,1,1,2,2,3,3,3],[1,1,1,2,3],[1,1,1,2,3,3],[1,1,1,2,3,3,3],[1,1,1,3],[1,1,1,3,3],[1,1,1,3,3,3],[1,1,2],[1,1,2,2],[1,1,2,2,2],[1,1,2,2,2,3],[1,1,2,2,2,3,3],[1,1,2,2,2,3,3,3],[1,1,2,2,3],[1,1,2,2,3,3],[1,1,2,2,3,3,3],[1,1,2,3],[1,1,2,3,3],[1,1,2,3,3,3],[1,1,3],[1,1,3,3],[1,1,3,3,3],[1,2],[1,2,2],[1,2,2,2],[1,2,2,2,3],[1,2,2,2,3,3],[1,2,2,2,3,3,3],[1,2,2,3],[1,2,2,3,3],[1,2,2,3,3,3],[1,2,3],[1,2,3,3],[1,2,3,3,3],[1,3],[1,3,3],[1,3,3,3],[2,2],[2,2,2],[2,2,2,3],[2,2,2,3,3],[2,2,2,3,3,3],[2,2,3],[2,2,3,3],[2,2,3,3,3],[2,3],[2,3,3],[2,3,3,3],[3,3],[3,3,3]]
    gap = []
    for i in res:
        if i in ans:
            continue
        gap.append(i)
    print(gap)